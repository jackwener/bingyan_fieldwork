( self: Sentence None, father: None, left: None, right: None )
( self: FunctionStatement None, father: Sentence, left: None, right: None )
( self: Type None, father: FunctionStatement, left: None, right: FunctionName )
( self: int FIELD_TYPE, father: Type, left: None, right: None )
( self: FunctionName None, father: FunctionStatement, left: Type, right: StateParameterList )
( self: main IDENTIFIER, father: FunctionName, left: None, right: None )
( self: StateParameterList None, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Sentence None, father: FunctionStatement, left: StateParameterList, right: None )
( self: Statement None, father: Sentence, left: None, right: Statement )
( self: Type None, father: Statement, left: None, right: a )
( self: int FIELD_TYPE, father: Type, left: None, right: None )
( self: a IDENTIFIER, father: Statement, left: Type, right: None )
( self: Statement None, father: Sentence, left: Statement, right: Statement )
( self: Type None, father: Statement, left: None, right: b )
( self: int FIELD_TYPE, father: Type, left: None, right: None )
( self: b IDENTIFIER, father: Statement, left: Type, right: None )
( self: Statement None, father: Sentence, left: Statement, right: Statement )
( self: Type None, father: Statement, left: None, right: d )
( self: int FIELD_TYPE, father: Type, left: None, right: None )
( self: d IDENTIFIER, father: Statement, left: Type, right: None )
( self: Statement None, father: Sentence, left: Statement, right: Assignment )
( self: Type None, father: Statement, left: None, right: i )
( self: int FIELD_TYPE, father: Type, left: None, right: None )
( self: i IDENTIFIER, father: Statement, left: Type, right: None )
( self: Assignment None, father: Sentence, left: Statement, right: Statement )
( self: b IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression Variable, father: Assignment, left: b, right: None )
( self: 2 _Variable, father: Expression, left: None, right: None )
( self: Statement None, father: Sentence, left: Assignment, right: Assignment )
( self: Type None, father: Statement, left: None, right: c )
( self: int FIELD_TYPE, father: Type, left: None, right: None )
( self: c IDENTIFIER, father: Statement, left: Type, right: 3 )
( self: 3 IDENTIFIER, father: Statement, left: c, right: ConstantList )
( self: ConstantList None, father: Statement, left: 3, right: None )
( self: Assignment None, father: Sentence, left: Statement, right: Assignment )
( self: a IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression DoubleOperand, father: Assignment, left: a, right: None )
( self: Expression DoubleOperand, father: Expression, left: None, right: Operator )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: 1 _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: + _Operator, father: Operator, left: None, right: None )
( self: Expression ArrayItem, father: Expression, left: Operator, right: None )
( self: c _ArrayName, father: Expression, left: None, right: 1 )
( self: 1 _ArrayIndex, father: Expression, left: c, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: + _Operator, father: Operator, left: None, right: None )
( self: Expression DoubleOperand, father: Expression, left: Operator, right: None )
( self: Expression DoubleOperand, father: Expression, left: None, right: Operator )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: b _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: * _Operator, father: Operator, left: None, right: None )
( self: Expression ArrayItem, father: Expression, left: Operator, right: None )
( self: c _ArrayName, father: Expression, left: None, right: 0 )
( self: 0 _ArrayIndex, father: Expression, left: c, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: / _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: 1 _Variable, father: Expression, left: None, right: None )
( self: Assignment None, father: Sentence, left: Assignment, right: Control )
( self: b IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression Variable, father: Assignment, left: b, right: None )
( self: 5 _Variable, father: Expression, left: None, right: None )
( self: Control IfElseControl, father: Sentence, left: Assignment, right: Control )
( self: IfControl None, father: Control, left: None, right: ElseControl )
( self: Expression DoubleOperand, father: IfControl, left: None, right: Sentence )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: a _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: > _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: 10 _Variable, father: Expression, left: None, right: None )
( self: Sentence None, father: IfControl, left: Expression, right: None )
( self: Assignment None, father: Sentence, left: None, right: None )
( self: b IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression DoubleOperand, father: Assignment, left: b, right: None )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: 5 _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: + _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: 2 _Variable, father: Expression, left: None, right: None )
( self: ElseControl None, father: Control, left: IfControl, right: None )
( self: Sentence None, father: ElseControl, left: None, right: None )
( self: Assignment None, father: Sentence, left: None, right: Statement )
( self: b IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression Variable, father: Assignment, left: b, right: None )
( self: 1 _Variable, father: Expression, left: None, right: None )
( self: Statement None, father: Sentence, left: Assignment, right: Assignment )
( self: Type None, father: Statement, left: None, right: f )
( self: int FIELD_TYPE, father: Type, left: None, right: None )
( self: f IDENTIFIER, father: Statement, left: Type, right: None )
( self: Assignment None, father: Sentence, left: Statement, right: None )
( self: f IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression Variable, father: Assignment, left: f, right: None )
( self: 3 _Variable, father: Expression, left: None, right: None )
( self: Control ForControl, father: Sentence, left: Control, right: Control )
( self: Assignment None, father: Control, left: None, right: Expression )
( self: i IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression Variable, father: Assignment, left: i, right: None )
( self: 0 _Variable, father: Expression, left: None, right: None )
( self: Expression DoubleOperand, father: Control, left: Assignment, right: Sentence )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: i _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: < _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: 5 _Variable, father: Expression, left: None, right: None )
( self: Sentence None, father: Control, left: Expression, right: Expression )
( self: Assignment None, father: Sentence, left: None, right: None )
( self: d IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression DoubleOperand, father: Assignment, left: d, right: None )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: d _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: + _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: 1 _Variable, father: Expression, left: None, right: None )
( self: Expression SingleOperand, father: Control, left: Sentence, right: None )
( self: Operator Operator, father: Expression, left: None, right: Expression )
( self: ++ _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: i _Variable, father: Expression, left: None, right: None )
( self: Control WhileControl, father: Sentence, left: Control, right: Return )
( self: Expression DoubleOperand, father: Control, left: None, right: Sentence )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: i _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: < _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: 10 _Variable, father: Expression, left: None, right: None )
( self: Sentence None, father: Control, left: Expression, right: None )
( self: Assignment None, father: Sentence, left: None, right: Assignment )
( self: a IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression DoubleOperand, father: Assignment, left: a, right: None )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: i _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: + _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: 2 _Variable, father: Expression, left: None, right: None )
( self: Assignment None, father: Sentence, left: Assignment, right: None )
( self: i IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression DoubleOperand, father: Assignment, left: i, right: None )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: i _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: + _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: 2 _Variable, father: Expression, left: None, right: None )
( self: Return None, father: Sentence, left: Control, right: None )
( self: return None, father: Return, left: None, right: Expression )
( self: Expression Variable, father: Return, left: return, right: None )
( self: 0 _Variable, father: Expression, left: None, right: None )
